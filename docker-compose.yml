version: '3'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    env_file:
      - backend/.env
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/usr/src/app
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    environment:
      - REACT_APP_EMAILJS_SERVICE_ID=${REACT_APP_EMAILJS_SERVICE_ID}
      - REACT_APP_EMAILJS_TEMPLATE_ID=${REACT_APP_EMAILJS_TEMPLATE_ID}
      - REACT_APP_EMAILJS_USER_ID=${REACT_APP_EMAILJS_USER_ID}
      - REACT_APP_FIREBASE_API_KEY=${REACT_APP_FIREBASE_API_KEY}
      - REACT_APP_FIREBASE_AUTH_DOMAIN=${REACT_APP_FIREBASE_AUTH_DOMAIN}
      - REACT_APP_FIREBASE_PROJECT_ID=${REACT_APP_FIREBASE_PROJECT_ID}
      - REACT_APP_FIREBASE_STORAGE_BUCKET=${REACT_APP_FIREBASE_STORAGE_BUCKET}
      - REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${REACT_APP_FIREBASE_MESSAGING_SENDER_ID}
      - REACT_APP_FIREBASE_APP_ID=${REACT_APP_FIREBASE_APP_ID}
    volumes:
      - ./src:/usr/src/app/src
      - ./public:/usr/src/app/public
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./tailwind.config.js:/usr/src/app/tailwind.config.js
    networks:
      - app-network
    # O frontend não precisa expor portas diretamente, pois o NGINX irá servir o frontend

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: nginx # Usa o estágio NGINX do Dockerfile para construir
    volumes:
      - /root/casamentoTs/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8081:80"  # Mapeando a porta 8081 do host para a porta 80 no contêiner
    depends_on:
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
